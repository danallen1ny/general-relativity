restart;
with(tensor);
with(linalg);
with(difforms);

coord := [t, chi, theta, phi]: #Define the metric tensor g[mu,nu].
g_compts := array(symmetric,sparse,1..4,1..4):
g_compts[1,1] := -1:#dt^2
g_comps[2,2] := a(t)^2:#chi^2
g_compts[3,3] := a(t)^2*sin(chi)^2:#dtheta^2
g_compts[4,4] := a(t)^2*sin(chi)^2*sin(theta)^2:#dphi^2
g := create ([-1,-1], eval(g_compts));
ginv := invert(g, 'detg'):

D1g := d1metric( g, coord ): #Take first and second derivatives of metric tensor to find the Einstein tensor.
D2g := d2metric( d1g, coord):
Cf1 := Christoffel1 ( D1g ):
RMN := Reimann( ginv, D2g, Cf1):
RICCI := Ricci( ginv, RMN ):
RS := Ricciscalar( ginv, RICCI ):
G := Einstein( g, RICCI, RS );

T_compts := array(symmetric,sparse,1..4,1..4): # Define Energy Momentum tensor.
T_compts[1,1] := rho(t):
T_compts[2,2] := a(t)^2*p(t):
T_compts[3,3] := a(t)^2*sin(chi)^2*p(t):
T_compts[4,4] := a(t)^2*sin(chi)^2*sin(theta)^2*p(t):
T := create([-1,-1], eval(T_compts));

get_compts(G): # Use [1,1] component of Einstein tensor and use Energy Momentum tensor to find first Friedmann equation.
%[1,1]:
e1 := simplify(%):
get_compts(g):
%[1,1]:
e2 := simplify(%):
E[1] := expand(e1/(-3)) = -8*pi*expand(e3/(-3)) + expand(e2*Lambda/(-3));

get_compts(G): # Use the [2,2] component of Einstein tensor and Energy Momentum tensor to find second Friedmann equation.
%[2,2]:
e1 := simplify(%):
get_compts(g):
%[2,2]:
e2 = simplify(%):
get_compts(T):
%[2,2]:
e3 := simplify(%):
E[2] := expand (e1/a(t)^2) = -8*pi*expand(e3/a(t)^2) + expand(e2*Lambda/a(t)^2);

expand(simplify(E[2]-E[1])/2); # Simplify second Friedmann equatino to isolate deleration parameter q(t).

basic_1 := (diff(a(t),t)/





